version: '3.8'

services:
  front:
    build:
      context: ./Docker/Frontend
    image: front
    container_name: front
    depends_on:
      - back
    volumes:
      - front_vol:/app
    ports: 
      - 3000:3000
    networks:
      - transcendence
    restart: always

  back:
    build:
      context: ./Docker/Backend
    image: back
    container_name: back
    depends_on:
      - database
    environment:
    - FRONT_PORT=${FRONT_PORT}
    - BACK_PORT=${BACK_PORT}
    - DB_PORT=${DB_PORT}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    - URL_ARGUMENTS=sslmode=prefer
    - DATABASE_CONTAINER_NAME=${DATABASE_CONTAINER_NAME}
    - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_CONTAINER_NAME}:${DB_PORT}/${POSTGRES_DB}?schema=public
    - LOCAL_IP=${LOCAL_IP}
    volumes:
      - back_vol:/app
    ports: 
      - 4000:4000
      - 5555:5555
    networks:
      - transcendence
    restart: always

  database:
    image: postgres
    container_name: database
    volumes:
      - database_vol:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - transcendence
    restart: always

volumes:

  front_vol:
    driver: local
    driver_opts:
      device: ./App/Next
      o: bind
      type: none

  back_vol:
    driver: local
    driver_opts:
      device: ./App/Nest
      o: bind
      type: none
  
  database_vol:

networks:
  transcendence:
    driver: bridge
    name: transcendence
